{"version":3,"sources":["images/img1.jpg","images/img3.jpg","images/img2.jpg","images/img4.jpg","components/Navbar/Navbar.jsx","components/ParallaxSwiper/ParallaxSwiper.jsx","components/CoverflowSwiper/CoverflowSwiper.jsx","components/IntroBox/IntroBox.jsx","components/CubeSwiper/CubeSwiper.jsx","components/VerticalFlipSwiper/VerticalFlipSwiper.jsx","components/BGImage/BGImage.jsx","components/BGImageParallax/BGImageParallax.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Component","ParallaxSwiper","lazy","speed","parallax","grabCursor","parallaxEl","el","value","pagination","dynamicBullets","data-swiper-parallax","y","x","tagOuter","CoverflowSwiper","swiperType","params","effect","loop","centeredSlides","slidesPerView","spaceBetween","freeMode","coverflowEffect","rotate","stretch","depth","slideShadows","autoplay","delay","disableOnInteraction","navigation","nextEl","prevEl","clasName","data-src","cf_swiper_img_1","cf_swiper_img_2","cf_swiper_img_3","cf_swiper_img_4","IntroBox","CubeEffect","cubeEffect","shadow","shadowOffset","shadowScale","FlipEffect","yOffA","yOffB","imgSrc","BGImage","this","props","src","BGImageParallax","imageNumber","doubleHeight","Footer","onClick","document","getElementById","classList","toggle","add","innerHTML","style","fontSize","margin","id","App","CubeSwiper","VerticalFlipSwiper","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.15395eba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.f52ff57f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.1d2969af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.de744b65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.da428f74.jpg\";","import React, { Component } from \"react\";\r\nimport \"@styles/navbarStyles.scss\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-container\">\r\n        <div className=\"nav-items-div\">\r\n          <span className=\"nav-item\">Kunal Dewan</span>\r\n          <span className=\"nav-item\">Logo</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport \"swiper/css/swiper.css\";\r\nimport \"@styles/parallaxSwiperStyles.scss\";\r\nimport { Parallax } from 'react-scroll-parallax';\r\n\r\nconst ParallaxSwiper = () => {\r\n  const params = {\r\n    lazy: true,\r\n    speed: 600,\r\n    parallax: true,\r\n    grabCursor: true,\r\n    parallaxEl: {\r\n      el: \".parallax-bg\",\r\n      value: \"-23%\",\r\n    },\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      dynamicBullets: true,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Swiper className=\"parallax-swiper-container\" {...params}>\r\n      <div className=\"parallax-swiper-top-slide parallax-swiper-top-slide--1\">\r\n        <div className=\"parallax-swiper-top-slide_heading\" data-swiper-parallax=\"-400\">\r\n          <Parallax y={[-40, 40]} x={[-220, 120]} tagOuter=\"figure\">\r\n            Welcome &nbsp;\r\n            <span className=\"parallax-swiper-top-slide_sub-heading\" data-swiper-parallax=\"900\">\r\n              &#8594;\r\n            </span>\r\n          </Parallax>\r\n        </div>\r\n      </div>\r\n      <div className=\"parallax-swiper-top-slide  parallax-swiper-top-slide--2\">\r\n        <div className=\"parallax-swiper-top-slide_heading\" data-swiper-parallax=\"-400\">\r\n          Slide #2\r\n        </div>\r\n        <div className=\"parallax-swiper-top-slide_data\" data-swiper-parallax=\"10000\">\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit.Aliquam dictum mattis velit, sit amet faucibus felis iaculis\r\n            nec. Nulla laoreet justo vitae porttitor porttitor. Suspendisse in sem justo. Integer laoreet magna nec elit suscipit,\r\n            ac laoreet nibh euismod.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"parallax-swiper-top-slide  parallax-swiper-top-slide--3\">\r\n        <div className=\"parallax-swiper-top-slide_heading\" data-swiper-parallax=\"-400\">\r\n          Slide #3\r\n        </div>\r\n        <div className=\"parallax-swiper-top-slide_data\" data-swiper-parallax=\"10000\">\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit.Aliquam dictum mattis velit, sit amet faucibus felis iaculis\r\n            nec. Nulla laoreet justo vitae porttitor porttitor. Suspendisse in sem justo. Integer laoreet magna nec elit suscipit,\r\n            ac laoreet nibh euismod.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default ParallaxSwiper;\r\n","import React from 'react';\r\nimport Swiper from 'react-id-swiper';\r\nimport 'swiper/css/swiper.css';\r\nimport '@styles/coverflowSwiperStyles.scss';\r\nimport cf_swiper_img_1 from '@images/img1.jpg';\r\nimport cf_swiper_img_2 from '@images/img2.jpg';\r\nimport cf_swiper_img_3 from '@images/img3.jpg';\r\nimport cf_swiper_img_4 from '@images/img4.jpg';\r\nimport { Parallax } from 'react-scroll-parallax';\r\n\r\nconst CoverflowSwiper = ({ swiperType }) => {\r\n  const params = {\r\n    effect: 'coverflow',\r\n    lazy: true,\r\n    loop: true,\r\n    grabCursor: true,\r\n    centeredSlides: true,\r\n    slidesPerView: swiperType == 'coverflow-wide' ? 'auto' : 2,\r\n    spaceBetween: 10,\r\n    freeMode: swiperType == 'coverflow-wide' ? true : false,\r\n    coverflowEffect: {\r\n      rotate: swiperType == 'coverflow-wide' ? 15 : 50,\r\n      stretch: 0,\r\n      depth: swiperType == 'coverflow-wide' ? 350 : 250,\r\n      slideShadows: false,\r\n    },\r\n    autoplay: {\r\n      delay: 2500,\r\n      disableOnInteraction: false,\r\n    },\r\n    pagination:\r\n      swiperType == 'coverflow-wide'\r\n        ? false\r\n        : {\r\n            el: '.swiper-pagination',\r\n            dynamicBullets: true,\r\n          },\r\n    navigation:\r\n      swiperType == 'coverflow-wide'\r\n        ? {\r\n            nextEl: '.swiper-button-next',\r\n            prevEl: '.swiper-button-prev',\r\n          }\r\n        : false,\r\n  };\r\n\r\n  // TODO **, read imgSrc from props & use loop to assign.\r\n\r\n  return (\r\n    <Parallax y={[-30, 70]} tagOuter=\"figure\">\r\n      <Swiper clasName=\"coverflow-swiper-container\" {...params}>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_1}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_2}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_3}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_4}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_1}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_2}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_3}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"coverflow-swiper-slide\">\r\n          <img\r\n            className=\"coverflow-styled-image  swiper-lazy\"\r\n            data-src={cf_swiper_img_4}\r\n          />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n      </Swiper>\r\n    </Parallax>\r\n  );\r\n};\r\n\r\nexport default CoverflowSwiper;\r\n","import React, { Component } from \"react\";\r\nimport \"@styles/introBoxStyles.scss\";\r\nimport { Parallax } from 'react-scroll-parallax';\r\n \r\nclass IntroBox extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"intro-box-container\">\r\n        <div className=\"intro-heading--1\">\r\n          <Parallax x={[40, -40]} y={[70, -70]} tagOuter=\"figure\">\r\n            MEMORIES{'_'}\r\n          </Parallax>\r\n        </div>\r\n\r\n        <div className=\"intro-heading--2\">\r\n          <Parallax x={[-40, 40]} y={[70, -70]} tagOuter=\"figure\">\r\n            WRITTEN IN CODE\r\n            <span className=\"intro-heading-bullet\">.</span>\r\n          </Parallax>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IntroBox;\r\n","\r\n  import React from 'react';\r\n  import Swiper from 'react-id-swiper';\r\n  import \"swiper/css/swiper.css\";\r\n  import \"@styles/cubeSwiperStyles.scss\";\r\n  import cf_swiper_img_1 from \"@images/img1.jpg\";\r\n  import cf_swiper_img_2 from \"@images/img2.jpg\";\r\n  import cf_swiper_img_3 from \"@images/img3.jpg\";\r\n  import cf_swiper_img_4 from \"@images/img4.jpg\";\r\n  import { Parallax } from 'react-scroll-parallax';\r\n\r\n  const CubeEffect = () => {\r\n    const params = {\r\n      loop: true,\r\n      lazy: true,\r\n      effect: 'cube',\r\n      grabCursor: true,\r\n      cubeEffect: {\r\n        shadow: true,\r\n        slideShadows: true,\r\n        shadowOffset: 20,\r\n        shadowScale: 0.94,\r\n      },\r\n      pagination: {\r\n        el: '.swiper-pagination',\r\n        dynamicBullets: true,\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Parallax y={[-10, 110]} tagOuter=\"figure\">\r\n        <Swiper {...params}>\r\n          <div className=\"cube-swiper-slide\">\r\n            <img className=\"cube-styled-image swiper-lazy\" data-src={cf_swiper_img_1} />\r\n            <div className=\"swiper-lazy-preloader\" />\r\n          </div>\r\n          <div className=\"cube-swiper-slide\">\r\n            <img className=\"cube-styled-image swiper-lazy\" data-src={cf_swiper_img_2} />\r\n            <div className=\"swiper-lazy-preloader\" />\r\n          </div>\r\n          <div className=\"cube-swiper-slide\">\r\n            <img className=\"cube-styled-image swiper-lazy\" data-src={cf_swiper_img_3} />\r\n            <div className=\"swiper-lazy-preloader\" />\r\n          </div>\r\n          <div className=\"cube-swiper-slide\">\r\n            <img className=\"cube-styled-image swiper-lazy\" data-src={cf_swiper_img_4} />\r\n            <div className=\"swiper-lazy-preloader\" />\r\n          </div>\r\n        </Swiper>\r\n      </Parallax>\r\n    );\r\n  };\r\n\r\n  export default CubeEffect;\r\n    ","import React, { Component } from \"react\";\r\nimport \"@styles/verticalFlipSwiperStyles.scss\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\nimport Swiper from 'react-id-swiper';\r\nimport \"swiper/css/swiper.css\";\r\n\r\nconst FlipEffect = ({ yOffA, yOffB, imgSrc }) => {\r\n  const params = {\r\n    effect: \"flip\",\r\n    lazy: true,\r\n    grabCursor: true,\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      dynamicBullets: true,\r\n    },\r\n  };\r\n  return (\r\n    <Parallax y={[yOffA, yOffB]} tagOuter=\"figure\">\r\n      <Swiper {...params}>\r\n        <div className='vertical-img-container'>\r\n          <img className=\"vertical-img swiper-lazy\" data-src={imgSrc} />\r\n          <div className=\"swiper-lazy-preloader\" />\r\n        </div>\r\n        <div className=\"vertical-img-container\">\r\n          <div className=\"swiper-lazy-preloader\" />\r\n          <img className=\"vertical-img swiper-lazy\" data-src={imgSrc} />\r\n        </div>\r\n        \r\n      </Swiper>\r\n    </Parallax>\r\n  );\r\n};\r\nexport default FlipEffect;\r\n","import React, { Component } from \"react\";\r\nimport \"@styles/bgImageStyles.scss\";\r\n\r\nclass BGImage extends Component {\r\n  render() {\r\n    const { imgSrc } = this.props;\r\n    return (\r\n        <div className=\"bg-img-container\">\r\n          <img className=\"bg-image\" src={imgSrc} />\r\n          {/* <div className=\"swiper-lazy-preloader swiper-lazy-preloader-black\" /> */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BGImage;\r\n","import React, { Component } from 'react';\r\nimport '@styles/bgImageStyles.scss';\r\nimport { Parallax } from 'react-scroll-parallax';\r\n\r\nclass BGImageParallax extends Component {\r\n  render() {\r\n    const { imageNumber, yOffA, yOffB, doubleHeight } = this.props;\r\n    return (\r\n      <Parallax y={[yOffA, yOffB]} tagOuter=\"figure\">\r\n        <div\r\n          className={`bg-img-container-parallax bg-img-container-parallax--${imageNumber} bg-img-double-ht-${doubleHeight}`}\r\n        />\r\n      </Parallax>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BGImageParallax;\r\n","import React, { Component } from 'react';\r\nimport '@styles/footerStyles.scss';\r\nimport { Parallax } from 'react-scroll-parallax';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const expandFooter = () => {\r\n      document\r\n        .getElementById('footer-container')\r\n        .classList.toggle('footer-container-wide');\r\n      document\r\n        .getElementById('footer-container')\r\n        .classList.add('disable-with-color-change');\r\n      document.getElementById('footer-text').innerHTML = 'Thank you!';\r\n      document.getElementById('footer-text').style.fontSize = '30px';\r\n      document.getElementById('footer-text').style.margin = '4% auto';\r\n    };\r\n\r\n    return (\r\n      <div\r\n        onClick={expandFooter}\r\n        id=\"footer-container\"\r\n        className=\"footer-container\"\r\n      >\r\n        <div className=\"footer-items-div\">\r\n          <span id=\"footer-text\" className=\"footer-item\">\r\n            © 2020 Kunal Dewan\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport '@styles/commonStyles.scss';\r\nimport {\r\n  ParallaxSwiper,\r\n  CoverflowSwiper,\r\n  IntroBox,\r\n  Navbar,\r\n  CubeSwiper,\r\n  BGImage,\r\n  VerticalFlipSwiper,\r\n  BGImageParallax,\r\n  Footer,\r\n} from '@components';\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\nimport cf_swiper_img_1 from '@images/img1.jpg';\r\nimport cf_swiper_img_2 from '@images/img2.jpg';\r\nimport cf_swiper_img_3 from '@images/img3.jpg';\r\nimport cf_swiper_img_4 from '@images/img4.jpg';\r\n\r\nfunction App() {\r\n  return (\r\n    <ParallaxProvider>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <IntroBox />\r\n        <ParallaxSwiper />\r\n        <CoverflowSwiper />\r\n        <CubeSwiper />\r\n        <BGImage imgSrc={cf_swiper_img_1} />\r\n        <VerticalFlipSwiper\r\n          yOffA={-250}\r\n          yOffB={-475}\r\n          imgSrc={cf_swiper_img_1}\r\n        />\r\n        <VerticalFlipSwiper yOffA={120} yOffB={-210} imgSrc={cf_swiper_img_2} />\r\n        <VerticalFlipSwiper yOffA={120} yOffB={-135} imgSrc={cf_swiper_img_3} />\r\n        <BGImageParallax imageNumber={1} yOffA={150} yOffB={-70} />\r\n        <VerticalFlipSwiper yOffA={180} yOffB={-40} imgSrc={cf_swiper_img_4} />\r\n        <VerticalFlipSwiper yOffA={10} yOffB={50} imgSrc={cf_swiper_img_3} />\r\n        <BGImageParallax doubleHeight imageNumber={1} yOffA={-20} yOffB={10} />\r\n        <CoverflowSwiper swiperType=\"coverflow-wide\" />\r\n        <Footer />\r\n      </div>\r\n    </ParallaxProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}